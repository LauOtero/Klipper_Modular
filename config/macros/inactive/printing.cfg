######################################################################
#                               PRINTING
######################################################################
#   VAR_GLOBALS
#   START_PRINT
#   PRIME_LINE
#   END_PRINT
#   MOVE_PARK
#   PAUSE
#   RESUME
#   CANCEL_PRINT
#   LOW_TEMP_CHECK
######################################################################

[save_variables]
filename: ~/klipper_config/config/variables/save_variables.cfg

[gcode_macro VAR_GLOBALS]

# Temperaturas de impresion
variable_temp_extruder          :   225.0   # temperatura de impresion 
variable_temp_bed               :   55.0    # temperatura de cama
variable_temp_chamber           :   60.0    # temperatura de cabina

# Motores
variable_home_cur		        :	0.700   # Vref mAh

# Bandeja Electronica
variable_status_et              :   false   # Bandeja de electronica Abierta/Cerrada (True|False)

# Posición de parking
variable_calc_parking           :   True    # habilita/deshabilita el pariking calculado (false = se desplaaza a las coordenadas proporcionadas abajo)
variable_x_park			        :	100.0	# Posicion de X en parking
variable_y_park			        :	100.0	# Posicion de X en parking
variable_z_park 		        :	100.0	# Posicion mínimal de Z en parking

# Pids por defecto
variable_temp_pid_e		        :	230.0	# temperatura del extrusor para realizar el PID
variable_temp_pid_b		        :	60.0	# temperatura de la cama para realizar el PID
variable_default_bedtemp        : 	30.0	# temperatura mínima por defecto al calibrar la cama

variable_z_up			        :	10.0	# sube x milimetros al hacer desplazamientos(home)

# posicion central 
variable_calc_center_pos        :   True    # calcula el centro de la cama (false = se desplaaza a las coordenadas proporcionadas abajo)
variable_x_center               :   0.0     # posicion central de X
variable_y_center               :   0.0     # posicion central de Y

variable_beeps				    :	2		# Numero de beeps de aviso.

variable_retract_length	        :	0.5 	# milimetros de retraccion de filamento
variable_retract_speed          :   30      # velocidad de retraccion

# filamento 
variable_fil_length_purge       :   5       # longitud de purga de filamento en milamentos
variable_fil_purge_speed        :   450     # velocidad de retracción de purga de filamento
variable_fil_num_repeats        :   1       # repite un numero de veces la carga/descargar evitar restriccion
variable_fil_length             :   50      # logitud de filamento a cargar/descargar 
variable_fil_speed              :   300     # velocidad de carga/descarga filamento
variable_fil_fast_speed         :   1200    # velocidad de carga/descarga filamento

variable_timeout_pause          :   7200    # tiempo de espera para entrar en reposo. (1h)
variable_timeout                :   3600    # tiempo de espera para entrar en reposo. (30 min)
gcode:

    {% if calc_center_pos %}
        SET_GCODE_VARIABLE MACRO=VAR_GLOBALS VARIABLE=x_center VALUE={(printer.toolhead.axis_maximum.x / 2)}
        SET_GCODE_VARIABLE MACRO=VAR_GLOBALS VARIABLE=y_center VALUE={(printer.toolhead.axis_maximum.y / 2)}
    {% endif %}

    {% if calc_parking %}
        SET_GCODE_VARIABLE MACRO=VAR_GLOBALS VARIABLE=x_park VALUE={(printer.toolhead.axis_maximum.x - 5)}
        SET_GCODE_VARIABLE MACRO=VAR_GLOBALS VARIABLE=y_park VALUE={(printer.toolhead.axis_maximum.y - 20)}
        SET_GCODE_VARIABLE MACRO=VAR_GLOBALS VARIABLE=z_park VALUE={(printer.toolhead.axis_maximum.z / 3)}
    {% endif %}

    # se actualizan los valores de retraccion a los del firmware
    {% if printer['firmware_retraction'] %}
        SET_GCODE_VARIABLE MACRO=VAR_GLOBALS VARIABLE=retract_length VALUE={printer.firmware_retraction.retract_length}
        SET_GCODE_VARIABLE MACRO=VAR_GLOBALS VARIABLE=retract_speed VALUE={printer.firmware_retraction.retract_speed}
    {% endif %}


[gcode_macro MOVE_UP]
gcode:
  SAVE_GCODE_STATE NAME=my_move_up_state
  G91
  G1 Z150 F1200
  G4 P3000
  RESTORE_GCODE_STATE NAME=my_move_up_state MOVE=1

[gcode_macro START_PRINT]
gcode:

    VAR_GLOBALS

    {% if params.TEMP_EXTRUDER and params.TEMP_BED %}

        {% set vg = printer["gcode_macro VAR_GLOBALS"] %}                   ; se accede las variables globales

        {% set t_fl_extruder = params.TEMP_EXTRUDER.split(",")[0]|float %}  ; Temperatura Primera capa EXTRUSOR
        {% set t_extruder = params.TEMP_EXTRUDER.split(",")[1]|float %}     ; Temperatura EXTRUSOR
        {% set t_fl_bed = params.TEMP_BED.split(",")[0]|float %}            ; Temperatura Primera capa CAMA
        {% set t_bed = params.TEMP_BED.split(",")[1]|float %}               ; Temperatura CAMA
        {% set t_chamber = params.TEMP_CHAMBER|float %}                     ; Temperatura CABINA

        # 
        # Se almacen las temperaturas de impresion en las variables globales
        # 
        SET_GCODE_VARIABLE MACRO=VAR_GLOBALS VARIABLE=temp_extruder VALUE={t_extruder}
        SET_GCODE_VARIABLE MACRO=VAR_GLOBALS VARIABLE=temp_bed VALUE={t_bed}
        SET_GCODE_VARIABLE MACRO=VAR_GLOBALS VARIABLE=temp_chamber VALUE={t_chamber}

        NOTIFY TEXT={t_fl_extruder}

        CLEAR_PAUSE
        # Temperaturas de inicio de calentamiento
        M104 S{t_fl_extruder}   ; asigna la temperatura del extrusor
        M140 S{t_fl_bed}        ; asigna la temperatura de la cama
        {% if t_chamber != 0 and printer["gcode_macro M141"] is defined %}
            M141 S={t_chamber}  ; asigna la temperatura de la cabina
        {% endif %}

        G34

        # Temperaturas objetivo 
        M190 S{t_fl_bed} ; espera hasta alcanzar la temperatura de la cama
        M109 S{t_fl_extruder}   ; espera hasta alcanzar la temperatura del extrusor
        {% if t_chamber != 0 and printer["gcode_macro M191"] is defined %}
            M191 S={t_chamber}  ; espera hasta alcanzar la temperatura de cabina.
        {% endif %}
        
        # Calibrado de cama por zona de impresion
        {% if params.PRINT_MIN and params.PRINT_MAX and printer["gcode_macro BED_MESH_CALIBRATE"] is defined %}
            {% if params.FORCE_NEW_MESH %}
                BED_MESH_CALIBRATE PRINT_MIN={params.PRINT_MIN} PRINT_MAX={params.PRINT_MAX} FORCE_NEW_MESH=params.FORCE_NEW_MESH
            {% else %}
                BED_MESH_CALIBRATE PRINT_MIN={params.PRINT_MIN} PRINT_MAX={params.PRINT_MAX}
            {% endif %}
        {% else %}
            {% set eTEXT = printer["gcode_macro BED_MESH_CALIBRATE"] is defined if "Macro BED_MESH_CALIBRATE no definida" else 
                           !params.PRINT_MIN and !params.PRINT_MAX if "PRINT_MIN y PRINT_MAX no definido." else
                           !params.PRINT_MIN if "PRINT_MIN no definido." else
                           !params.PRINT_MAX if "PRINT_MAX no definido." %}     ; Texto de error
            {action_respond_info("%s" % ( eTEXT ))}
            G29
        {% endif %}

        # Use absolute coordinates
        G90
        # Move the nozzle near the be
        G1 X0 Y0 Z5 F6000
        # Prime line
        PRIME_LINE
    
    {% endif %}

# prime the nozzle 
[gcode_macro PRIME_LINE]
gcode: 
    NOTIFY TEXT="Prime Line"
    G92 E0                          ;Reset Extruder
    # move z axis 
    G1 Z2.0 F3000                   ;Move Z Axis up
    
    # Linea a lo largo de X
    ;G1 X30 Y10 Z0.28 F5000.0        ;Move to start position
    ;G1 X200 Y10 Z0.28 F1500.0 E15   ;Draw the first line
    ;G1 X200 Y12 Z0.28 F5000.0       ;Move to side a little
    ;G1 X50 Y12 Z0.28 F1500.0 E30    ;Draw the second line

    ; Linea a lo largo de Y
    G1 X20 Y30 Z0.28 F5000.0        ;Move to start position
    G1 X20 Y200 Z0.28 F1500.0 E15 ;Draw the first line
    G1 X22 Y200 Z0.28 F5000.0     ;Move to side a little
    G1 X22 Y50 Z0.28 F1500.0 E30    ;Draw the second line

    G92 E0                          ;Reset Extruder
    G1 Z2.0 F3000                   ;Move Z Axis up
    
[gcode_macro END_PRINT]
description: Finaliza la impresion.
gcode:
    {% set vg = printer["gcode_macro VAR_GLOBALS"] %}
   
    G91
    G1 E-{vg.retract_length} F2100 # retrae el filamento
    G1 Z{vg.z_up}           # sube Z
    #G1 Z{ZU}
    MOVE_PARK               # aparca el cabezal de imprsion
    TURN_OFF_HEATERS        # desactiva extrusor y cama
    M106 S0                 # apaga los ventiladores
    M84                     # desactiva motores
    NOTIFY TEXT="Impresion finalizada :)"

[gcode_macro MOVE_PARK]
description: Aparca el cabezal de impresion.
gcode:
    {% set vg = printer["gcode_macro VAR_GLOBALS"] %}
   
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set pos_z = printer.toolhead.position.z|float %}

    {% if pos_z < vg.z_park %}
        {% set z_safe = (vg.z_park - pos_z) %}
    {% elif pos_z < (max_z - vg.z_up) %}
        {% set z_safe = globals.z_park %}
    {% else %}
        {% set z_safe = max_z - pos_z %}
    {% endif %}

    ##### end of definitions #####
    NOTIFY TEXT="Aparcando cabezal de impresion"

    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
        G1 E-{vg.retract_length} F2100
    {% else %}
        NOTIFY TEXT="Temperatura baja, imposible extruir"
    {% endif %}
    
    {% if "xyz" in printer.toolhead.homed_axes %}
        G1 Z{z_safe} F3000
        G90
        G1 X{vg.x_park} Y{vg.y_park} F6000
    {% else %}
        NOTIFY TEXT="Ejes no inicializados."
    {% endif %}

[gcode_macro PAUSE]
description: Pausa la impresion actual.
rename_existing: BASE_PAUSE
gcode:
   {% set vg = printer["gcode_macro VAR_GLOBALS"] %}
  
   {% if not printer.pause_resume.is_paused %}
      M400
      SAVE_GCODE_STATE NAME=PAUSE_state
      BASE_PAUSE
      BEEP
      MOVE_PARK
      BEEP R={vg.beeps}
   {% endif %}

[gcode_macro RESUME]
description: Reanuda la impresion actual.
rename_existing: BASE_RESUME
gcode:

    {% set vg = printer["gcode_macro VAR_GLOBALS"] %}
	
    #### Definiendo el parametro VELOCITY  ####
    {% if 'VELOCITY' in params|upper %}
		{% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
		{% set get_params = "" %}
    {% endif %}
	
    NOTIFY TEXT="Reanudando..." CLEAR=1
    MSG_RESUME
    SMART_HOME
    LOW_TEMP_CHECK
    G91
    G1 E{vg.retract} F2100
    BASE_RESUME {get_params}	
	

[gcode_macro RESUME]
description: Reanuda la impresion actual.
rename_existing: BASE_RESUME
gcode: 
    {% set vg = printer["gcode_macro VAR_GLOBALS"] %}

    {% if not printer.pause_resume.is_paused %}
        NOTIFY TEXT="Impresion no pausada, reanudacion de impresion abortado"
    {% else %}
        {% set vg = printer["gcode_macro VAR_GLOBALS"] %}
        # Calienta extrusor y cama si es necesario
        M190 S{vg.temp_bed} ; wait for bed temp
        M109 S{vg.temp_extruder} ; wait for extruder temp
        SLEEP
        LOW_TEMP_CHECK
        RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1 MOVE_SPEED=80
        BASE_RESUME
    {% endif %}

[gcode_macro CANCEL_PRINT]
description: Cancela la impresion actual
rename_existing: BASE_CANCEL_PRINT
gcode:
    NOTIFY TEXT="CANCEL PRINTING..." CLEAR=1
    TURN_OFF_HEATERS
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    MOVE_PARK
    BASE_CANCEL_PRINT

[gcode_macro LOW_TEMP_CHECK]
description: Espera a la temperatura optima de impresion.
gcode:

    {% set vg = printer["gcode_macro VAR_GLOBALS"] %}

    {% if printer.heater_bed.target != 0 %} # Si hay una temperatura objetivo para la cama
        {% if printer.heater_bed.temperature < printer.heater_bed.target %} # Si no se alcanza la temperatura
            NOTIFY TEXT="Calentando la cama de {printer.heater_bed.temperature} a {printer.heater_bed.target}."
            M190 S{printer.heater_bed.target|float} ; se espera hasta alcanzarla
        {% endif %}
    {% else %} # Si no hay una temperatura objetivo de la cama
        NOTIFY TEXT="Fijando temperatura de la cama a {vg.temp_bed}."
        M190 S{vg.temp_bed} ; se espera hasta alcanzar la temperatura de la cama
    {% endif %}

    {% if printer.extruder.target != 0 %} # Si hay una temperatura objetivo para el extrusor
        {% if printer.extruder.temperature < printer.extruder.target %} #  Si no se alcanza la temperatura
            NOTIFY TEXT="Calentando el extrusor de {printer.extruder.temperature} a {printer.extruder.target}."
            M109 S{printer.extruder.target|float} ; wait for extruder temp
        {% endif %}
    {% else %} # si no hay temperatura objetivo del extrusor
        NOTIFY TEXT="Fijando temperatura del extrusor a {vg.temp_extruder}."
        M109 S{vg.temp_extruder} ; Se espara hasta alcanzar temperatura de impresion
    {% endif %}